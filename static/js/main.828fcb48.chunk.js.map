{"version":3,"sources":["browser-history.js","const.js","components/film-page/film.prop.js","store/action.js","store/films-data/films-data.js","store/reviews-data/reviews-data.js","store/user-data/user-data.js","store/root-reducer.js","utils.js","store/films-data/selectors.js","store/user-data/selectors.js","components/private-route/private-route.jsx","services/adapter.js","store/api-actions.js","components/logo/logo.jsx","components/user-avatar/user-avatar.jsx","components/my-list-button/my-list-button.jsx","components/genre-list/genre-list.jsx","components/film-card/film-card.jsx","components/film-list/film-list.jsx","components/show-more-button/show-more-button.jsx","components/footer/footer.jsx","components/loading-screen/loading-screen.jsx","components/main-page/main-page.jsx","components/sign-in-page/sign-in-page.jsx","components/my-list-page/my-list-page.jsx","store/reviews-data/selectors.js","components/film-page/review.prop.js","components/film-page/tabs/overview-tab.jsx","components/film-page/tabs/details-tab.jsx","components/film-page/tabs/reviews-tab.jsx","components/film-page/tabs/tabs.jsx","components/film-page/film-page.jsx","components/review-form-field/review-form-field.jsx","components/review-form/review-form.jsx","components/add-review-page/add-review-page.jsx","components/player-page/player-page.jsx","components/not-found-page/not-found-page.jsx","components/app/app.jsx","services/api.js","index.js","store/middlewares/redirect.js"],"names":["browserHistory","createBrowserHistory","ALL_GENRES","RatingLevel","RatingLevelNumber","AppRoute","FilmTab","OVERVIEW","DETAILS","REVIEWS","AuthorizationStatus","APIRoute","PropTypes","shape","id","number","isRequired","name","string","posterImage","previewImage","backgroundImage","backgroundColor","videoLink","previewVideoLink","description","rating","scoresCount","director","starring","array","runTime","genre","released","isFavorite","bool","ActionType","loadFilm","film","type","payload","loadReviews","reviews","requireAuthorization","status","redirectToRoute","url","initialState","films","promoFilm","similarFilms","favoriteFilms","isDataLoaded","authorizationStatus","NameSpace","combine","combineReducers","state","action","getGenresList","genreList","Set","add","forEach","Array","from","checkAuthorized","getGenre","getFilms","getFilm","getPromoFilm","getSimilarFilms","getFavoriteFilms","getFilmsByGenres","slice","filter","getLoadedDataStatus","getAuthorizationStatus","connect","render","path","exact","routeProps","to","adaptFilmToClient","parseInt","poster_image","preview_image","background_image","background_color","video_link","preview_video_link","scores_count","run_time","is_favorite","adaptFilmsToClient","map","fetchPromoFilm","dispatch","_getState","api","get","then","data","catch","fetchSimilarFilms","fetchFavoriteFilms","logout","delete","localStorage","setItem","Logo","className","onLogout","history","useHistory","onClick","push","src","alt","width","height","href","evt","preventDefault","onSubmit","statusData","post","postFavorite","useState","setIsFavorite","useEffect","prevState","viewBox","xlinkHref","GenreList","currentGenre","onGenreChange","handleGenreClick","target","textContent","index","FilmCard","delayHandler","setDelayHandler","player","useRef","handleMouseLeave","clearTimeout","current","load","onMouseEnter","setTimeout","play","onMouseLeave","generatePath","poster","ref","muted","FilmList","ShowMoreButton","onShowMoreClick","Footer","LoadingScreen","style","filmsByGenre","changeGenre","loadPromo","Math","min","length","shownFilmsCount","setShownFilmsCount","authData","email","login","password","token","loginRef","passwordRef","isEmailError","isPasswordError","setData","placeholder","data-testid","htmlFor","test","value","trim","loadData","getReviews","comment","date","user","OverviewTab","trunc","join","DetailsTab","split","star","Fragment","floor","ReviewsTab","ceil","review","dateTime","moment","format","Tabs","activeTab","setActiveTab","tabs","Object","values","handleMouseClick","innerText","tab","filmId","fetchReviews","useParams","likeThisFilms","movie","ReviewFormField","handleRatingChange","isDisabled","defaultValue","checked","onChange","disabled","handleSubmitError","postReview","isButtonDisabled","isFormDisabled","isSubmitError","Number","element","keyValue","cols","maxLength","onInput","commentLength","color","AddReviewPage","find","PlayerPage","playButton","fullScreenButton","isPlaying","elapsedTime","playerState","setPlayerState","duration","useElapsedTime","remainingTime","max","left","unix","paused","pause","requestFullscreen","NotFoundPage","HttpCode","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","onUnauthorized","getItem","axios","create","baseURL","timeout","headers","interceptors","response","use","defaults","common","err","createAPI","_store","next","window","location","reload","ReactDOM","StrictMode","document","getElementById","onbeforeunload"],"mappings":"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","file":"static/js/main.828fcb48.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","const RATING_COUNT = 10;\nconst ROUNDING_INTEGER = 10;\nconst LIKE_THIS_FILMS_COUNT = 4;\nconst PREVIEW_VIDEO_DELAY = 1000;\nconst SHOW_MORE_FILMS_COUNT = 8;\nconst ALL_GENRES = 'All genres';\nconst COMMENT_MIN_LENGTH = 50;\nconst COMMENT_MAX_LENGTH = 400;\nconst SUBMIT_ERROR_DELAY = 4500;\n\nconst RatingLevel = {\n  AWESOME: 'Awesome',\n  VERY_GOOD: 'Very good',\n  GOOD: 'Good',\n  NORMAL: 'Normal',\n  BAD: 'Bad',\n};\n\nconst RatingLevelNumber = {\n  AWESOME: 10,\n  VERY_GOOD: 8,\n  GOOD: 5,\n  NORMAL: 3,\n};\n\nconst AppRoute = {\n  MAIN: '/',\n  LOGIN: '/login',\n  MY_LIST: '/mylist',\n  FILM: '/films/:id',\n  ADD_REVIEW: '/films/:id/review',\n  PLAYER: '/player/:id',\n  NOT_FOUND: '/404',\n};\n\nconst FilmTab = {\n  OVERVIEW: 'Overview',\n  DETAILS: 'Details',\n  REVIEWS: 'Reviews',\n};\n\nconst AuthorizationStatus = {\n  AUTH: 'AUTH',\n  NO_AUTH: 'NO_AUTH',\n  UNKNOWN: 'UNKNOWN',\n};\n\nconst APIRoute = {\n  FILMS: '/films',\n  LOGIN: '/login',\n  LOGOUT: '/logout',\n  SIMILAR: '/similar',\n  FAVORITE: '/favorite',\n  PROMO: '/promo',\n  COMMENTS: '/comments',\n};\n\nexport {\n  RatingLevel,\n  RatingLevelNumber,\n  AppRoute,\n  FilmTab,\n  AuthorizationStatus,\n  APIRoute,\n  ALL_GENRES,\n  COMMENT_MAX_LENGTH,\n  COMMENT_MIN_LENGTH,\n  SUBMIT_ERROR_DELAY,\n  RATING_COUNT,\n  ROUNDING_INTEGER,\n  LIKE_THIS_FILMS_COUNT,\n  SHOW_MORE_FILMS_COUNT,\n  PREVIEW_VIDEO_DELAY\n};\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  posterImage: PropTypes.string.isRequired,\n  previewImage: PropTypes.string.isRequired,\n  backgroundImage: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  videoLink: PropTypes.string.isRequired,\n  previewVideoLink: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  scoresCount: PropTypes.number.isRequired,\n  director: PropTypes.string.isRequired,\n  starring: PropTypes.array.isRequired,\n  runTime: PropTypes.number.isRequired,\n  genre: PropTypes.string.isRequired,\n  released: PropTypes.number.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n}).isRequired;\n","const ActionType = {\n  CHANGE_GENRE: 'films/changeGenre',\n  GET_FILMS_BY_GENRE: 'films/filmsByGenre',\n  LOAD_FILMS: 'films/loadFilms',\n  LOAD_FILM: 'films/loadFilm',\n  LOAD_PROMO_FILM: 'films/loadPromoFilm',\n  LOAD_SIMILAR_FILMS: 'films/loadSimilarFilms',\n  LOAD_FAVORITE_FILMS: 'films/loadFavoriteFilms',\n  LOAD_REVIEWS: 'reviews/loadReviews',\n  REQUIRED_AUTHORIZATION: 'user/requiredAuthorization',\n  LOGOUT: 'user/logout',\n  REDIRECT_TO_ROUTE: 'common/redirectToRoute',\n};\n\nconst changeGenre = (genre) => ({\n  type: ActionType.CHANGE_GENRE,\n  payload: genre,\n});\n\nconst getFilmsByGenre = () => ({\n  type: ActionType.GET_FILMS_BY_GENRE,\n});\n\nconst loadFilms = (films) => ({\n  type: ActionType.LOAD_FILMS,\n  payload: films,\n});\n\nconst loadFilm = (film) => ({\n  type: ActionType.LOAD_FILM,\n  payload: film,\n});\n\nconst loadPromoFilm = (film) => ({\n  type: ActionType.LOAD_PROMO_FILM,\n  payload: film,\n});\n\nconst loadSimilarFilms = (films) => ({\n  type: ActionType.LOAD_SIMILAR_FILMS,\n  payload: films,\n});\n\nconst loadFavoriteFilms = (films) => ({\n  type: ActionType.LOAD_FAVORITE_FILMS,\n  payload: films,\n});\n\nconst loadReviews = (reviews) => ({\n  type: ActionType.LOAD_REVIEWS,\n  payload: reviews,\n});\n\nconst requireAuthorization = (status) => ({\n  type: ActionType.REQUIRED_AUTHORIZATION,\n  payload: status,\n});\n\nconst logout = () => ({\n  type: ActionType.LOGOUT,\n});\n\nconst redirectToRoute = (url) => ({\n  type: ActionType.REDIRECT_TO_ROUTE,\n  payload: url,\n});\n\nexport {ActionType, changeGenre, getFilmsByGenre, loadFilms, loadFilm, loadPromoFilm, loadSimilarFilms, loadFavoriteFilms, loadReviews, requireAuthorization, logout, redirectToRoute};\n","import {ActionType} from '../action.js';\nimport {ALL_GENRES} from '../../const.js';\n\nconst initialState = {\n  genre: ALL_GENRES,\n  films: [],\n  film: {},\n  promoFilm: {},\n  similarFilms: [],\n  favoriteFilms: [],\n  isDataLoaded: false,\n};\n\nconst filmsData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.CHANGE_GENRE:\n      return {\n        ...state,\n        genre: action.payload,\n      };\n    case ActionType.LOAD_FILMS:\n      return {\n        ...state,\n        films: action.payload,\n        isDataLoaded: true,\n      };\n    case ActionType.LOAD_FILM:\n      return {\n        ...state,\n        film: action.payload,\n      };\n    case ActionType.LOAD_PROMO_FILM:\n      return {\n        ...state,\n        promoFilm: action.payload,\n      };\n    case ActionType.LOAD_SIMILAR_FILMS:\n      return {\n        ...state,\n        similarFilms: action.payload,\n      };\n    case ActionType.LOAD_FAVORITE_FILMS:\n      return {\n        ...state,\n        favoriteFilms: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport {filmsData};\n","import {ActionType} from '../action.js';\n\nconst initialState = {\n  reviews: [],\n};\n\nconst reviewsData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.LOAD_REVIEWS:\n      return {\n        ...state,\n        reviews: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport {reviewsData};\n","import {ActionType} from '../action.js';\nimport {AuthorizationStatus} from '../../const.js';\n\nconst initialState = {\n  authorizationStatus: AuthorizationStatus.UNKNOWN,\n};\n\nconst userData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.REQUIRED_AUTHORIZATION:\n      return {\n        ...state,\n        authorizationStatus: action.payload,\n      };\n    case ActionType.LOGOUT:\n      return {\n        ...state,\n        authorizationStatus: AuthorizationStatus.NO_AUTH,\n      };\n    default:\n      return state;\n  }\n};\n\nexport {userData};\n","import {combineReducers} from 'redux';\nimport {filmsData} from './films-data/films-data.js';\nimport {reviewsData} from './reviews-data/reviews-data.js';\nimport {userData} from './user-data/user-data.js';\n\nconst NameSpace = {\n  FILMS_DATA: 'FILMS_DATA',\n  REVIEWS_DATA: 'REVIEWS_DATA',\n  USER_DATA: 'USER_DATA',\n};\n\nconst combine = combineReducers({\n  [NameSpace.FILMS_DATA]: filmsData,\n  [NameSpace.REVIEWS_DATA]: reviewsData,\n  [NameSpace.USER_DATA]: userData,\n});\n\nexport {NameSpace, combine as default};\n","import {ALL_GENRES, AuthorizationStatus} from './const.js';\n\nconst getGenresList = (films) => {\n  const  genreList = new Set();\n  genreList.add(ALL_GENRES);\n  films.forEach((film) => genreList.add(film.genre));\n  return Array.from(genreList);\n};\n\nconst getFilmsByGenre = (films, genre) => (genre === ALL_GENRES) ? films : films.slice().filter((film) => film.genre === genre);\n\nconst checkAuthorized = (status) => status === AuthorizationStatus.AUTH;\n\nexport {getGenresList, getFilmsByGenre, checkAuthorized};\n","import {NameSpace} from '../root-reducer';\nimport {getFilmsByGenre} from '../../utils';\n\nconst getGenre = (state) => state[NameSpace.FILMS_DATA].genre;\nconst getFilms = (state) => state[NameSpace.FILMS_DATA].films;\nconst getFilm = (state) => state[NameSpace.FILMS_DATA].film;\nconst getPromoFilm = (state) => state[NameSpace.FILMS_DATA].promoFilm;\nconst getSimilarFilms = (state) => state[NameSpace.FILMS_DATA].similarFilms;\nconst getFavoriteFilms = (state) => state[NameSpace.FILMS_DATA].favoriteFilms;\nconst getFilmsByGenres = (state) => getFilmsByGenre(state[NameSpace.FILMS_DATA].films, state[NameSpace.FILMS_DATA].genre);\nconst getLoadedDataStatus  = (state) => state[NameSpace.FILMS_DATA].isDataLoaded;\n\nexport {getGenre, getFilms, getFilm, getPromoFilm, getSimilarFilms, getFavoriteFilms, getFilmsByGenres, getLoadedDataStatus};\n","import {NameSpace} from '../root-reducer';\n\nconst getAuthorizationStatus = (state) => state[NameSpace.USER_DATA].authorizationStatus;\n\nexport {getAuthorizationStatus};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {getAuthorizationStatus} from '../../store/user-data/selectors.js';\n\nimport {AppRoute, AuthorizationStatus} from '../../const';\n\nfunction PrivateRoute({render, path, exact, authorizationStatus}) {\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={(routeProps) => (\n        authorizationStatus === AuthorizationStatus.AUTH\n          ? render(routeProps)\n          : <Redirect to={AppRoute.LOGIN} />\n      )}\n    />\n  );\n}\n\nPrivateRoute.propTypes = {\n  authorizationStatus: PropTypes.string.isRequired,\n  exact: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nexport {PrivateRoute};\nexport default connect(mapStateToProps)(PrivateRoute);\n","const adaptFilmToClient = (film) => ({\n  'id': parseInt(film.id, 10),\n  'name': film.name,\n  'posterImage': film.poster_image,\n  'previewImage': film.preview_image,\n  'backgroundImage': film.background_image,\n  'backgroundColor': film.background_color,\n  'videoLink': film.video_link,\n  'previewVideoLink': film.preview_video_link,\n  'description': film.description,\n  'rating': film.rating,\n  'scoresCount': film.scores_count,\n  'director': film.director,\n  'starring': film.starring,\n  'runTime': film.run_time,\n  'genre': film.genre,\n  'released': film.released,\n  'isFavorite': film.is_favorite,\n});\n\nconst adaptFilmsToClient = (films) => (films.map((film) => adaptFilmToClient(film)));\n\nexport {adaptFilmsToClient, adaptFilmToClient};\n","import {loadFilms, redirectToRoute, loadFilm, loadPromoFilm, loadSimilarFilms, loadReviews, requireAuthorization, logout as closeSession, loadFavoriteFilms} from './action';\nimport {AuthorizationStatus, APIRoute, AppRoute} from '../const.js';\nimport {adaptFilmsToClient, adaptFilmToClient} from '../services/adapter.js';\nimport { generatePath } from 'react-router-dom';\n\nconst fetchFilmsList = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.FILMS)\n    .then(({data}) => dispatch(loadFilms(adaptFilmsToClient(data))))\n);\n\nconst fetchFilm = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.FILMS}/${id}`)\n    .then(({data}) => dispatch(loadFilm(adaptFilmToClient(data))))\n    .catch(() => dispatch(redirectToRoute(AppRoute.NOT_FOUND)))\n);\n\nconst fetchPromoFilm = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.PROMO)\n    .then(({data}) => dispatch(loadPromoFilm(adaptFilmToClient(data))))\n    .catch(() => dispatch(redirectToRoute(AppRoute.NOT_FOUND)))\n);\n\nconst fetchSimilarFilms = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.FILMS}/${id}${APIRoute.SIMILAR}`)\n    .then(({data}) => dispatch(loadSimilarFilms(adaptFilmsToClient(data))))\n);\n\nconst fetchFavoriteFilms = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.FAVORITE)\n    .then(({data}) => dispatch(loadFavoriteFilms(adaptFilmsToClient(data))))\n);\n\nconst fetchReviews = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.COMMENTS}/${id}`)\n    .then(({data}) => dispatch(loadReviews(data)))\n);\n\nconst postReview = ({id, rating, comment}, handleSubmitError) => (dispatch, _getState, api) => (\n  api.post(`${APIRoute.COMMENTS}/${id}`, {rating, comment})\n    .then(({data}) => dispatch(loadReviews(data)))\n    .then(() => dispatch(redirectToRoute(generatePath(AppRoute.FILM, {id: id}))))\n    .catch(() => handleSubmitError())\n);\n\nconst postFavorite = ({id, state}) => (dispatch, _getState, api) => (\n  api.post(`${APIRoute.FAVORITE}/${id}/${state}`)\n    .then(({data}) => dispatch(loadFilm(adaptFilmToClient(data))))\n    .catch(() => {})\n);\n\nconst checkAuth = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.LOGIN)\n    .then(() => dispatch(requireAuthorization(AuthorizationStatus.AUTH)))\n    .catch(() => {})\n);\n\nconst login = ({login: email, password}) => (dispatch, _getState, api) => (\n  api.post(APIRoute.LOGIN, {email, password})\n    .then(({data}) => localStorage.setItem('token', data.token))\n    .then(() => dispatch(requireAuthorization(AuthorizationStatus.AUTH)))\n);\n\nconst logout = () => (dispatch, _getState, api) => (\n  api.delete(APIRoute.LOGOUT)\n    .then(() => localStorage.setItem('token', ''))\n    .then(() => dispatch(closeSession()))\n);\n\nexport {fetchFilmsList, fetchFilm, fetchPromoFilm, fetchSimilarFilms, fetchFavoriteFilms, fetchReviews, postReview, postFavorite, checkAuth, login, logout};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { AppRoute } from '../../const';\n\nfunction Logo() {\n  return (\n    <div className=\"logo\">\n      <Link className=\"logo__link\" to={AppRoute.MAIN}>\n        <span className=\"logo__letter logo__letter--1\">W</span>\n        <span className=\"logo__letter logo__letter--2\">T</span>\n        <span className=\"logo__letter logo__letter--3\">W</span>\n      </Link>\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {getAuthorizationStatus} from '../../store/user-data/selectors.js';\n\nimport {checkAuthorized} from '../../utils.js';\nimport {logout} from '../../store/api-actions';\nimport {AppRoute} from '../../const.js';\n\nfunction UserAvatar({authorizationStatus, onLogout}) {\n  const history = useHistory();\n\n  const handleLogout = (evt) => {\n    evt.preventDefault();\n\n    onLogout();\n  };\n\n  return (\n    checkAuthorized(authorizationStatus) ?\n      <ul className=\"user-block\">\n        <li className=\"user-block__item\">\n          <div className=\"user-block__avatar\" onClick={() => history.push(AppRoute.MY_LIST)}>\n            <img src=\"https://kokinz.github.io/1569955-what-to-watch-7/img/avatar.jpg\" alt=\"User avatar\" width=\"63\" height=\"63\"/>\n          </div>\n        </li>\n        <li className=\"user-block__item\">\n          <a className=\"user-block__link\" href=\"/\" onClick={handleLogout}>Sign out</a>\n        </li>\n      </ul> :\n      <div className=\"user-block\">\n        <Link to={AppRoute.LOGIN} className=\"user-block__link\">Sign in</Link>\n      </div>\n  );\n}\n\nUserAvatar.propTypes = {\n  authorizationStatus: PropTypes.string.isRequired,\n  onLogout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onLogout() {\n    dispatch(logout());\n  },\n});\n\nexport {UserAvatar};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAvatar);\n","import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport filmProp from '../film-page/film.prop';\n\nimport {postFavorite} from '../../store/api-actions';\nimport {getAuthorizationStatus} from '../../store/user-data/selectors.js';\nimport {AppRoute, AuthorizationStatus} from '../../const';\n\nfunction MyListButton({film, authorizationStatus, onSubmit}) {\n  const history = useHistory();\n  const [isFavorite, setIsFavorite] = useState(film.isFavorite);\n\n  useEffect(() => {\n    setIsFavorite(film.isFavorite);\n  }, [film]);\n\n  const handleMyListButtonClick = (evt) => {\n    evt.preventDefault();\n\n    if (authorizationStatus === AuthorizationStatus.AUTH) {\n      setIsFavorite((prevState) => {\n        const state = prevState ? 0 : 1;\n\n        onSubmit({id: film.id, state});\n\n        return !prevState;\n      });\n\n      return;\n    }\n\n    history.push(AppRoute.LOGIN);\n  };\n\n  return (\n    <button className=\"btn btn--list film-card__button\" type=\"button\" onClick={handleMyListButtonClick}>\n      <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n        <use xlinkHref={isFavorite && authorizationStatus === AuthorizationStatus.AUTH ? '#in-list' : '#add'}></use>\n      </svg>\n      <span>My list</span>\n    </button>\n  );\n}\n\nMyListButton.propTypes = {\n  film: PropTypes.shape(filmProp).isRequired,\n  authorizationStatus: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit(statusData) {\n    dispatch(postFavorite(statusData));\n  },\n});\n\nexport {MyListButton};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyListButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport filmProp from '../film-page/film.prop';\n\nimport {getGenresList} from '../../utils.js';\n\nfunction GenreList({films, currentGenre, onGenreChange}) {\n  const handleGenreClick = (evt) => {\n    evt.preventDefault();\n\n    onGenreChange(evt.target.textContent);\n  };\n\n  return (\n    <ul className=\"catalog__genres-list\">\n      {getGenresList(films).map((genre, index) => (\n        <li key ={genre} className={(genre === currentGenre) ? 'catalog__genres-item catalog__genres-item--active' : 'catalog__genres-item'}>\n          <a href=\"/\" className=\"catalog__genres-link\" onClick={handleGenreClick}>{genre}</a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nGenreList.propTypes = {\n  films: PropTypes.arrayOf(filmProp).isRequired,\n  currentGenre: PropTypes.string.isRequired,\n  onGenreChange: PropTypes.func.isRequired,\n};\n\nexport default GenreList;\n","import React, {useState, useRef} from 'react';\nimport {generatePath, useHistory} from 'react-router';\nimport {Link} from 'react-router-dom';\n\nimport filmProp from '../film-page/film.prop';\n\nimport {PREVIEW_VIDEO_DELAY, AppRoute} from '../../const.js';\n\nfunction FilmCard({film}) {\n  const {id, name, previewImage, previewVideoLink} = film;\n  const [delayHandler, setDelayHandler] =  useState(null);\n\n  const player = useRef();\n  const history = useHistory();\n\n  const handleMouseEnter = () => {\n    setDelayHandler(setTimeout(() => player.current.play(), PREVIEW_VIDEO_DELAY));\n  };\n\n  const handleMouseLeave = () => {\n    clearTimeout(delayHandler);\n    player.current.load();\n  };\n\n  const handleMouseClick = () => {\n    history.push(generatePath(AppRoute.FILM, {id: id}));\n    clearTimeout(delayHandler);\n  };\n\n  return (\n    <article className=\"small-film-card catalog__films-card\" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} onClick={handleMouseClick} >\n      <div className=\"small-film-card__image\" >\n        <video src={previewVideoLink} poster={previewImage} ref={player} width=\"280\" muted />\n      </div>\n      <h3 className=\"small-film-card__title\">\n        <Link className=\"small-film-card__link\" to={generatePath(AppRoute.FILM, {id: id})} onClick={handleMouseLeave}>\n          {name}\n        </Link>\n      </h3>\n    </article>\n  );\n}\n\nFilmCard.propTypes = {\n  film: filmProp,\n};\n\nexport default FilmCard;\n","import React from 'react';\nimport FilmCard from '../film-card/film-card';\nimport PropTypes from 'prop-types';\nimport filmProp from '../film-page/film.prop';\n\nfunction FilmList({films}) {\n  return (\n    <>\n      {films.map((film) => (\n        <FilmCard key = {film.id}\n          film = {film}\n        />\n      ))}\n    </>\n  );\n}\n\nFilmList.propTypes = {\n  films: PropTypes.arrayOf(filmProp).isRequired,\n};\n\nexport default FilmList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ShowMoreButton({onShowMoreClick}) {\n  return (\n    <button className=\"catalog__button\" type=\"button\" onClick={onShowMoreClick}>Show more</button>\n  );\n}\n\nShowMoreButton.propTypes = {\n  onShowMoreClick: PropTypes.func.isRequired,\n};\n\nexport default ShowMoreButton;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { AppRoute } from '../../const';\n\nfunction Footer() {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"logo\">\n        <Link className=\"logo__link logo__link--light\" to={AppRoute.MAIN}>\n          <span className=\"logo__letter logo__letter--1\">W</span>\n          <span className=\"logo__letter logo__letter--2\">T</span>\n          <span className=\"logo__letter logo__letter--3\">W</span>\n        </Link>\n      </div>\n\n      <div className=\"copyright\">\n        <p>© 2019 What to watch Ltd.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction LoadingScreen() {\n  return (\n    <div className={'loading-screen'} style={{backgroundColor: '#262626', width: '100vw', height: '100vh'}}>\n      <div className={'ring'}>Loading<span className={'point'}></span></div>\n    </div>\n  );\n}\n\nexport default LoadingScreen;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {generatePath, useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {changeGenre, getFilmsByGenre} from '../../store/action.js';\nimport {fetchPromoFilm} from '../../store/api-actions';\n\nimport {getGenre, getPromoFilm, getFilms, getFilmsByGenres} from '../../store/films-data/selectors.js';\n\nimport filmProp from '../film-page/film.prop';\n\nimport Logo from '../logo/logo';\nimport UserAvatar from '../user-avatar/user-avatar';\nimport MyListButton from '../my-list-button/my-list-button';\nimport GenreList from '../genre-list/genre-list';\nimport FilmList from '../film-list/film-list';\nimport ShowMoreButton from '../show-more-button/show-more-button';\nimport Footer from '../footer/footer';\nimport LoadingScreen from '../loading-screen/loading-screen.jsx';\n\nimport {AppRoute, SHOW_MORE_FILMS_COUNT} from '../../const.js';\n\nfunction MainPage({loadPromo, films, genre, onGenreChange, filmsByGenre, promoFilm}) {\n  const history = useHistory();\n  const [shownFilmsCount, setShownFilmsCount] = useState(Math.min(filmsByGenre.length, SHOW_MORE_FILMS_COUNT));\n\n  useEffect(() => {\n    setShownFilmsCount(SHOW_MORE_FILMS_COUNT);\n  }, [filmsByGenre]);\n\n  useEffect(() => {\n    loadPromo();\n\n    if (!promoFilm.id) {\n      return (<LoadingScreen />);\n    }\n  }, [loadPromo, promoFilm.id]);\n\n  const handleShowMoreClick = () => {\n    setShownFilmsCount(shownFilmsCount + SHOW_MORE_FILMS_COUNT);\n  };\n\n  return (\n    <>\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src={promoFilm.backgroundImage} alt={promoFilm.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header film-card__head\">\n          <Logo />\n\n          <UserAvatar />\n        </header>\n\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster\">\n              <img src={promoFilm.posterImage} alt={promoFilm.name} width=\"218\" height=\"327\" />\n            </div>\n\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{promoFilm.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{promoFilm.genre}</span>\n                <span className=\"film-card__year\">{promoFilm.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <button className=\"btn btn--play film-card__button\" type=\"button\" onClick={() => history.push(generatePath(AppRoute.PLAYER, {id: promoFilm.id}))}>\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use xlinkHref=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </button>\n                <MyListButton film={promoFilm} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n          <GenreList films={films} currentGenre={genre} onGenreChange={onGenreChange}/>\n\n          <div className=\"catalog__films-list\">\n            <FilmList films={filmsByGenre.slice(0, shownFilmsCount)} />\n          </div>\n\n          <div className=\"catalog__more\">\n            {shownFilmsCount < filmsByGenre.length ? <ShowMoreButton onShowMoreClick={handleShowMoreClick} /> : ''}\n          </div>\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nMainPage.propTypes = {\n  loadPromo: PropTypes.func.isRequired,\n  films: PropTypes.arrayOf(filmProp).isRequired,\n  promoFilm: PropTypes.shape(filmProp).isRequired,\n  genre: PropTypes.string.isRequired,\n  onGenreChange: PropTypes.func.isRequired,\n  filmsByGenre: PropTypes.arrayOf(filmProp).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  genre: getGenre(state),\n  promoFilm: getPromoFilm(state),\n  films: getFilms(state),\n  filmsByGenre: getFilmsByGenres(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onGenreChange(genre) {\n    dispatch(changeGenre(genre));\n    dispatch(getFilmsByGenre());\n  },\n  loadPromo() {\n    dispatch(fetchPromoFilm());\n  },\n});\n\nexport {MainPage};\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n","import React, {useRef, useState} from 'react';\nimport {Redirect} from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {getAuthorizationStatus} from '../../store/user-data/selectors.js';\n\nimport Logo from '../logo/logo';\nimport Footer from '../footer/footer';\n\nimport {checkAuthorized} from '../../utils.js';\nimport {login} from '../../store/api-actions';\nimport {AppRoute} from '../../const.js';\n\nfunction SignInPage({authorizationStatus, onSubmit}) {\n  const loginRef = useRef();\n  const passwordRef = useRef();\n\n  const [data, setData] = useState({\n    isEmailError: false,\n    isPasswordError: false,\n  });\n\n  const handleSubmit = (evt) => {\n    const rex = /^[\\w-.]+@[\\w-]+\\.[a-z]{2,4}$/i;\n\n    evt.preventDefault();\n\n    if (!rex.test(loginRef.current.value)) {\n      setData({\n        ...data,\n        isEmailError: true,\n      });\n\n      return;\n    }\n\n    if (passwordRef.current.value.trim().length === 0) {\n      setData({\n        ...data,\n        isPasswordError: true,\n      });\n\n      return;\n    }\n\n    onSubmit({\n      login: loginRef.current.value,\n      password: passwordRef.current.value,\n    });\n  };\n\n  return (\n    checkAuthorized(authorizationStatus) ?\n      <Redirect to={AppRoute.MAIN}></Redirect> :\n\n      <div className=\"user-page\">\n        <header className=\"page-header user-page__head\">\n          <Logo />\n          <h1 className=\"page-title user-page__title\">Sign in</h1>\n        </header>\n        <div className=\"sign-in user-page__content\">\n          <form action=\"#\" className=\"sign-in__form\">\n            {data.isEmailError ? <div className=\"sign-in__message\"><p>Please enter a valid email address</p></div> : ''}\n            {data.isPasswordError ? <div className=\"sign-in__message\"><p>We can’t recognize this email <br /> and password combination. Please try again.</p></div> : ''}\n            <div className=\"sign-in__fields\">\n              <div className=\"sign-in__field\">\n                <input ref={loginRef} className=\"sign-in__input\" type=\"email\" placeholder=\"Email address\" name=\"user-email\" id=\"user-email\" data-testid=\"login\" />\n                <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n              </div>\n              <div className=\"sign-in__field\">\n                <input ref={passwordRef} className=\"sign-in__input\" type=\"password\" placeholder=\"Password\" name=\"user-password\" id=\"user-password\" data-testid=\"password\" />\n                <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n              </div>\n            </div>\n            <div className=\"sign-in__submit\">\n              <button className=\"sign-in__btn\" type=\"submit\" onClick={handleSubmit}>Sign in</button>\n            </div>\n          </form>\n        </div>\n        <Footer />\n      </div>\n  );\n}\n\nSignInPage.propTypes = {\n  authorizationStatus: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit(authData) {\n    dispatch(login(authData));\n  },\n});\n\nexport {SignInPage};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage);\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport filmProp from '../film-page/film.prop';\nimport {fetchFavoriteFilms} from '../../store/api-actions';\nimport {getFavoriteFilms} from '../../store/films-data/selectors';\n\nimport Logo from '../logo/logo';\nimport UserAvatar from '../user-avatar/user-avatar';\nimport FilmList from '../film-list/film-list';\nimport Footer from '../footer/footer';\n\nfunction MyListPage({favoriteFilms, loadData}) {\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <Logo />\n        <h1 className=\"page-title user-page__title\">My list</h1>\n        <UserAvatar />\n      </header>\n      <section className=\"catalog\">\n        <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n        <div className=\"catalog__films-list\">\n          <FilmList films={favoriteFilms}></FilmList>\n        </div>\n      </section>\n      <Footer />\n    </div>\n  );\n}\n\nMyListPage.propTypes = {\n  favoriteFilms: PropTypes.arrayOf(filmProp).isRequired,\n  loadData: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  favoriteFilms: getFavoriteFilms(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadData() {\n    dispatch(fetchFavoriteFilms());\n  },\n});\n\nexport {MyListPage};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyListPage);\n","import {NameSpace} from '../root-reducer';\n\nconst getReviews = (state) => state[NameSpace.REVIEWS_DATA].reviews;\n\nexport {getReviews};\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  comment: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport filmProp from '../film.prop';\nimport {RatingLevel, RatingLevelNumber} from '../../../const.js';\n\nconst getLevel = (rating) => {\n  if (Math.trunc(rating) === RatingLevelNumber.AWESOME) {\n    return RatingLevel.AWESOME;\n  }\n  if (Math.trunc(rating) >= RatingLevelNumber.VERY_GOOD) {\n    return RatingLevel.VERY_GOOD;\n  }\n  if (Math.trunc(rating) >= RatingLevelNumber.GOOD) {\n    return RatingLevel.GOOD;\n  }\n  if (Math.trunc(rating) >= RatingLevelNumber.NORMAL) {\n    return RatingLevel.NORMAL;\n  }\n  return RatingLevel.BAD;\n};\n\nfunction OverviewTab({film}) {\n  return (\n    <>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{film.rating}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">{getLevel(film.rating)}</span>\n          <span className=\"film-rating__count\">{film.scoresCount} ratings</span>\n        </p>\n      </div>\n      <div className=\"film-card__text\">\n        <p>{film.description}</p>\n        <p className=\"film-card__director\"><strong>Director: {film.director}</strong></p>\n        <p className=\"film-card__starring\"><strong>Starring: {film.starring.slice(0, 3).join(', ')} and other</strong></p>\n      </div>\n    </>\n  );\n}\n\nOverviewTab.propTypes = {\n  film: PropTypes.shape(filmProp).isRequired,\n};\n\nexport default OverviewTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport filmProp from '../film.prop';\n\nfunction DetailsTab({film}) {\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{film.director}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <span className=\"film-card__details-value\">\n            {film.starring.slice().join(',_').split('_').map((star) => (\n              <React.Fragment key={star}>\n                {star}\n                <br />\n              </React.Fragment>\n            ))}\n          </span>\n        </p>\n      </div>\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">{Math.floor(film.runTime / 60) === 0 ? '' : `${Math.floor(film.runTime / 60)}h `} {film.runTime % 60}m</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{film.genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{film.released}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nDetailsTab.propTypes = {\n  film: PropTypes.shape(filmProp).isRequired,\n};\n\nexport default DetailsTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Moment from 'react-moment';\n\nimport reviewProp from '../review.prop.js';\n\nfunction ReviewsTab({reviews}) {\n  return (\n    <div className=\"film-card__reviews film-card__row\">\n      <div className=\"film-card__reviews-col\">\n        {reviews.slice(0, Math.ceil(reviews.length / 2)).map((review) => (\n          <div className=\"review\" key={review.id}>\n            <blockquote className=\"review__quote\">\n              <p className=\"review__text\">{review.comment}</p>\n              <footer className=\"review__details\">\n                <cite className=\"review__author\">{review.user.name}</cite>\n                <time className=\"review__date\" dateTime={moment(review.date).format('YYYY-MM-DD')}>\n                  <Moment format=\"MMMM D, YYYY\">\n                    {review.date}\n                  </Moment>\n                </time>\n              </footer>\n            </blockquote>\n            <div className=\"review__rating\">{review.rating}</div>\n          </div>\n        ))}\n      </div>\n      <div className=\"film-card__reviews-col\">\n        {reviews.slice(Math.ceil(reviews.length / 2)).map((review) => (\n          <div className=\"review\" key={review.id}>\n            <blockquote className=\"review__quote\">\n              <p className=\"review__text\">{review.comment}</p>\n              <footer className=\"review__details\">\n                <cite className=\"review__author\">{review.user.name}</cite>\n                <time className=\"review__date\" dateTime={moment(review.date).format('YYYY-MM-DD')}>\n                  <Moment format=\"MMMM D, YYYY\">\n                    {review.date}\n                  </Moment>\n                </time>\n              </footer>\n            </blockquote>\n            <div className=\"review__rating\">{review.rating}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nReviewsTab.propTypes = {\n  reviews: PropTypes.arrayOf(reviewProp).isRequired,\n};\n\nexport default ReviewsTab;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport OverviewTab from './overview-tab';\nimport DetailsTab from './details-tab';\nimport ReviewsTab from './reviews-tab';\n\nimport filmProp from '../film.prop';\nimport reviewProp from '../review.prop.js';\nimport {FilmTab} from '../../../const.js';\n\nfunction Tabs({film, reviews}) {\n  const [activeTab, setActiveTab] = useState(FilmTab.OVERVIEW);\n  const tabs = Object.values(FilmTab);\n\n  const handleMouseClick = (evt) => {\n    evt.preventDefault();\n\n    setActiveTab(evt.target.innerText);\n  };\n\n  return (\n    <div className=\"film-card__desc\">\n      <nav className=\"film-nav film-card__nav\">\n        <ul className=\"film-nav__list\">\n          {tabs.map((tab) => (\n            <li key={tab} className={tab === activeTab ? 'film-nav__item film-nav__item--active' : 'film-nav__item'}>\n              <a href=\"/\" className=\"film-nav__link\" onClick={handleMouseClick}>{tab}</a>\n            </li>\n          ))}\n        </ul>\n      </nav>\n      {activeTab === FilmTab.OVERVIEW && <OverviewTab film={film} />}\n      {activeTab === FilmTab.DETAILS && <DetailsTab film={film} />}\n      {activeTab === FilmTab.REVIEWS && <ReviewsTab reviews={reviews} />}\n    </div>);\n}\n\nTabs.propTypes = {\n  film: PropTypes.shape(filmProp).isRequired,\n  reviews: PropTypes.arrayOf(reviewProp).isRequired,\n};\n\nexport default Tabs;\n","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {generatePath} from 'react-router';\nimport {useParams, useHistory, Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport filmProp from '../film-page/film.prop';\nimport reviewProp from '../film-page/review.prop';\nimport {fetchFilm, fetchSimilarFilms, fetchReviews} from '../../store/api-actions';\n\nimport {getFilm, getSimilarFilms} from '../../store/films-data/selectors.js';\nimport {getAuthorizationStatus} from '../../store/user-data/selectors.js';\nimport {getReviews} from '../../store/reviews-data/selectors.js';\n\nimport Logo from '../logo/logo';\nimport UserAvatar from '../user-avatar/user-avatar';\nimport MyListButton from '../my-list-button/my-list-button';\nimport Tabs from './tabs/tabs';\nimport FilmList from '../film-list/film-list';\nimport Footer from '../footer/footer';\nimport LoadingScreen from '../loading-screen/loading-screen.jsx';\n\nimport {AppRoute, LIKE_THIS_FILMS_COUNT, ROUNDING_INTEGER} from '../../const.js';\nimport {checkAuthorized} from '../../utils.js';\n\nfunction FilmPage({film, similarFilms, reviews, loadData, authorizationStatus}) {\n  const filmId = parseInt(useParams().id, ROUNDING_INTEGER);\n  const history = useHistory();\n\n  const likeThisFilms = similarFilms.filter((movie) => movie.id !== filmId).slice(0, LIKE_THIS_FILMS_COUNT);\n\n  useEffect(() => {\n    loadData(filmId);\n\n    if (filmId !== film.id) {\n      return (<LoadingScreen />);\n    }\n  }, [filmId, film.id, loadData]);\n\n  return (\n    <>\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={film.backgroundImage} alt={film.name} />\n          </div>\n          <h1 className=\"visually-hidden\">WTW</h1>\n          <header className=\"page-header film-card__head\">\n            <Logo />\n            <UserAvatar />\n          </header>\n          <div className=\"film-card__wrap\">\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{film.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{film.genre}</span>\n                <span className=\"film-card__year\">{film.released}</span>\n              </p>\n              <div className=\"film-card__buttons\">\n                <button className=\"btn btn--play film-card__button\" type=\"button\" onClick={() => history.push(generatePath(AppRoute.PLAYER, {id: filmId}))}>\n                  <svg viewBox=\"0 0 19 19\" width={19} height={19}>\n                    <use xlinkHref=\"#play-s\" />\n                  </svg>\n                  <span>Play</span>\n                </button>\n                <MyListButton film={film} />\n                {checkAuthorized(authorizationStatus) ? <Link className=\"btn film-card__button\" to={generatePath(AppRoute.ADD_REVIEW, {id: filmId})}>Add review</Link> : ''}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster film-card__poster--big\">\n              <img src={film.posterImage} alt=\"The Grand Budapest Hotel poster\" width={218} height={327} />\n            </div>\n            {film.id ? <Tabs film={film} reviews={reviews}/> : ''}\n          </div>\n        </div>\n      </section>\n      <div className=\"page-content\">\n        <section className=\"catalog catalog--like-this\">\n          {likeThisFilms.length ? <h2 className=\"catalog__title\">More like this</h2> : ''}\n          <div className=\"catalog__films-list\">\n            <FilmList films={likeThisFilms}></FilmList>\n          </div>\n        </section>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nFilmPage.propTypes = {\n  loadData: PropTypes.func.isRequired,\n  film: PropTypes.shape(filmProp).isRequired,\n  similarFilms: PropTypes.arrayOf(filmProp).isRequired,\n  reviews: PropTypes.arrayOf(reviewProp).isRequired,\n  authorizationStatus: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  film: getFilm(state),\n  similarFilms: getSimilarFilms(state),\n  reviews: getReviews(state),\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadData(filmId) {\n    dispatch(fetchFilm(filmId));\n    dispatch(fetchSimilarFilms(filmId));\n    dispatch(fetchReviews(filmId));\n  },\n});\n\nexport {FilmPage};\nexport default connect(mapStateToProps, mapDispatchToProps)(FilmPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ReviewFormField({index, value, handleRatingChange, isDisabled}) {\n  return (\n    <>\n      <input className=\"rating__input\" id={`star-${index}`} type=\"radio\" name=\"rating\" defaultValue={index} checked={value === index} onChange={handleRatingChange} disabled={isDisabled} />\n      <label className=\"rating__label\" htmlFor={`star-${index}`}>Rating {index}</label>\n    </>\n  );\n}\n\nReviewFormField.propTypes = {\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n  handleRatingChange: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n};\n\nexport default ReviewFormField;\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {postReview} from '../../store/api-actions.js';\n\nimport ReviewFormField from '../review-form-field/review-form-field';\n\nimport {RATING_COUNT, COMMENT_MAX_LENGTH, COMMENT_MIN_LENGTH, SUBMIT_ERROR_DELAY} from '../../const';\n\nfunction ReviewForm({id, onSubmit}) {\n  const [data, setData] = useState({\n    rating: 7,\n    comment: '',\n    isButtonDisabled: true,\n    isFormDisabled: false,\n    isSubmitError: false,\n  });\n\n  const {rating, comment} = data;\n\n  const handleRatingChange = (evt) => {\n    setData({\n      ...data,\n      rating: Number(evt.target.value),\n    });\n  };\n\n  const handleTextChange = (evt) => {\n    const commentLength = evt.target.value.length;\n\n    if (commentLength >= COMMENT_MIN_LENGTH) {\n      setData({\n        ...data,\n        isButtonDisabled: false,\n        comment: evt.target.value,\n      });\n    } else {\n      setData({\n        ...data,\n        isButtonDisabled: true,\n        comment: evt.target.value,\n      });\n    }\n  };\n\n  const handleSubmitError = () => {\n    setData({\n      ...data,\n      isSubmitError: true,\n      isFormDisabled: true,\n    });\n\n    setTimeout(() => {\n      setData({\n        ...data,\n        isSubmitError: false,\n        isFormDisabled: false,\n      });\n    }, SUBMIT_ERROR_DELAY);\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    setData({\n      ...data,\n      isFormDisabled: true,\n    });\n\n    onSubmit({\n      id: id,\n      rating: data.rating,\n      comment: data.comment,\n    }, handleSubmitError);\n  };\n\n  return (\n    <form action=\"#\" className=\"add-review__form\" onSubmit={handleSubmit}>\n      <div className=\"rating\">\n        <div className=\"rating__stars\">\n          {Array.from({length: RATING_COUNT}).map((element, index) => {\n            const keyValue = `${element}-${index}`;\n            return (\n              <ReviewFormField index={RATING_COUNT - index} value={rating} handleRatingChange={handleRatingChange} isDisabled={data.isFormDisabled} key={keyValue}/>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"add-review__text\">\n        <textarea className=\"add-review__textarea\" name=\"review-text\" id=\"review-text\" cols={30} placeholder=\"Review text\" value={comment} maxLength={COMMENT_MAX_LENGTH} onInput={handleTextChange} disabled={data.isFormDisabled}/>\n        <div className=\"add-review__submit\">\n          {data.isSubmitError ? <p style={{color: '#FF0000'}}>Ошибка отправки отзыва</p> : <button className=\"add-review__btn\" type=\"submit\" disabled={data.isButtonDisabled || data.isFormDisabled}>Post</button>}\n        </div>\n      </div>\n    </form>\n  );\n}\n\nReviewForm.propTypes = {\n  id: PropTypes.number.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit(authData, handleSubmitError) {\n    dispatch(postReview(authData, handleSubmitError));\n  },\n});\n\nexport {ReviewForm};\nexport default connect(null, mapDispatchToProps)(ReviewForm);\n","import React from 'react';\nimport {generatePath} from 'react-router';\nimport {useParams, Link} from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport filmProp from '../film-page/film.prop';\n\nimport Logo from '../logo/logo';\nimport UserAvatar from '../user-avatar/user-avatar';\nimport ReviewForm from '../review-form/review-form';\nimport {AppRoute, ROUNDING_INTEGER} from '../../const';\n\nfunction AddReviewPage({films}) {\n  const filmId = parseInt(useParams().id, ROUNDING_INTEGER);\n  const film = films.find((movie) => (movie.id === filmId));\n\n  return (\n    <section className=\"film-card film-card--full\">\n      <div className=\"film-card__header\">\n        <div className=\"film-card__bg\">\n          <img src={film.backgroundImage} alt={film.name} />\n        </div>\n        <h1 className=\"visually-hidden\">WTW</h1>\n        <header className=\"page-header\">\n          <Logo />\n          <nav className=\"breadcrumbs\">\n            <ul className=\"breadcrumbs__list\">\n              <li className=\"breadcrumbs__item\">\n                <Link to={generatePath(AppRoute.FILM, {id: filmId})} className=\"breadcrumbs__link\">{film.name}</Link>\n              </li>\n              <li className=\"breadcrumbs__item\">\n                <a className=\"breadcrumbs__link\" href=\"/\" onClick={(evt) => evt.preventDefault()}>Add review</a>\n              </li>\n            </ul>\n          </nav>\n          <UserAvatar />\n        </header>\n        <div className=\"film-card__poster film-card__poster--small\">\n          <img src={film.posterImage} alt={film.name} width={218} height={327} />\n        </div>\n      </div>\n      <div className=\"add-review\">\n        <ReviewForm id={filmId}/>\n      </div>\n    </section>\n  );\n}\n\nAddReviewPage.propTypes = {\n  films: PropTypes.arrayOf(filmProp).isRequired,\n};\n\nexport default AddReviewPage;\n","import React, {useRef, useState} from 'react';\nimport {useParams, useHistory, generatePath} from 'react-router-dom';\nimport {useElapsedTime} from 'use-elapsed-time';\nimport Moment from 'react-moment';\n\nimport PropTypes from 'prop-types';\nimport filmProp from '../film-page/film.prop';\nimport {AppRoute, ROUNDING_INTEGER} from '../../const.js';\n\nfunction PlayerPage({films}) {\n  const filmId = parseInt(useParams().id, ROUNDING_INTEGER);\n  const film = films.find((movie) => (movie.id === filmId));\n\n  const history = useHistory();\n  const player = useRef();\n  const playButton = useRef();\n  const fullScreenButton = useRef();\n\n  const [playerState, setPlayerState] = useState({\n    isPlaying: false,\n    elapsedTime: '',\n  });\n\n  const isPlaying = playerState.isPlaying;\n  const duration = film.runTime;\n\n  const {elapsedTime} = useElapsedTime({duration: duration*60, isPlaying });\n  const remainingTime = Math.ceil((duration*60) - elapsedTime);\n\n  const handlePlayClick = (evt) => {\n    evt.preventDefault();\n\n    if(player.current.paused) {\n      player.current.play();\n\n      setPlayerState((prevState) => ({...prevState, isPlaying: true}));\n    } else {\n      player.current.pause();\n\n      setPlayerState((prevState) => ({...prevState, isPlaying: false}));\n    }\n  };\n\n  const handleFullScreenClick = (evt) => {\n    evt.preventDefault();\n\n    player.current.requestFullscreen();\n  };\n\n  return (\n    <div className=\"player\">\n      <video ref={player} src={film.videoLink} className=\"player__video\" poster={film.posterImage} />\n\n      <button type=\"button\" className=\"player__exit\" onClick={() => history.push(generatePath(AppRoute.FILM, {id: filmId}))}>Exit</button>\n      <div className=\"player__controls\">\n        <div className=\"player__controls-row\">\n          <div className=\"player__time\">\n            <progress className=\"player__progress\" value={30} max={100} />\n            <div className=\"player__toggler\" style={{left: `${Math.floor((elapsedTime/(duration*60)*100))}`}}>Toggler</div>\n          </div>\n          <div className=\"player__time-value\">\n            <Moment unix format=\"-HH:mm:ss\">\n              {remainingTime}\n            </Moment>\n          </div>\n        </div>\n        <div className=\"player__controls-row\">\n          <button ref={playButton} type=\"button\" className=\"player__play\" onClick={handlePlayClick}>\n            <svg viewBox=\"0 0 19 19\" width={19} height={19}>\n              <use xlinkHref={playerState.isPlaying ? '#pause' : '#play-s'}/>\n            </svg>\n            <span>Play</span>\n          </button>\n          <div className=\"player__name\">{film.name}</div>\n          <button ref={fullScreenButton} type=\"button\" className=\"player__full-screen\" onClick={handleFullScreenClick}>\n            <svg viewBox=\"0 0 27 27\" width={27} height={27}>\n              <use xlinkHref=\"#full-screen\" />\n            </svg>\n            <span>Full screen</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nPlayerPage.propTypes = {\n  films: PropTypes.arrayOf(filmProp).isRequired,\n};\n\nexport default PlayerPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\n\nimport Footer from '../footer/footer';\n\nfunction NotFoundPage() {\n\n  return (\n    <div className=\"user-page\">\n      <section>\n        <h1>404. Page not found</h1>\n        <Link to={AppRoute.MAIN}>Вернуться на главную</Link>\n      </section>\n      <Footer />\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Switch, Route} from 'react-router-dom';\n\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport filmProp from '../film-page/film.prop';\n\nimport {getFilms, getLoadedDataStatus} from '../../store/films-data/selectors.js';\nimport {getAuthorizationStatus} from '../../store/user-data/selectors.js';\n\nimport PrivateRoute from '../private-route/private-route';\nimport MainPage from '../main-page/main-page';\nimport SignInPage from '../sign-in-page/sign-in-page';\nimport MyListPage from '../my-list-page/my-list-page';\nimport FilmPage from '../film-page/film-page';\nimport AddReviewPage from '../add-review-page/add-review-page';\nimport PlayerPage from '../player-page/player-page';\nimport NotFoundPage from '../not-found-page/not-found-page';\nimport LoadingScreen from '../loading-screen/loading-screen';\n\nfunction App({films, authorizationStatus, isDataLoaded}) {\n  if (authorizationStatus === AuthorizationStatus.UNKNOWN || !isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <Switch>\n      <Route exact path={AppRoute.MAIN}>\n        <MainPage />\n      </Route>\n      <Route exact path={AppRoute.LOGIN}>\n        <SignInPage />\n      </Route>\n      <PrivateRoute\n        exact\n        path={AppRoute.MY_LIST}\n        render={() => <MyListPage films={films} />}\n      >\n      </PrivateRoute>\n      <Route exact path={AppRoute.FILM}>\n        <FilmPage\n          films={films}\n        />\n      </Route>\n      <PrivateRoute\n        exact\n        path={AppRoute.ADD_REVIEW}\n        render={() => <AddReviewPage films={films} />}\n      >\n      </PrivateRoute>\n      <Route exact path={AppRoute.PLAYER}>\n        <PlayerPage\n          films={films}\n        />\n      </Route>\n      <Route>\n        <NotFoundPage path={AppRoute.NOT_FOUND}/>\n      </Route>\n    </Switch>\n  );\n}\n\nApp.propTypes = {\n  films: PropTypes.arrayOf(filmProp).isRequired,\n  authorizationStatus: PropTypes.string.isRequired,\n  isDataLoaded: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  films: getFilms(state),\n  authorizationStatus: getAuthorizationStatus(state),\n  isDataLoaded: getLoadedDataStatus(state),\n});\n\nexport {App};\nexport default connect(mapStateToProps, null)(App);\n","import axios from 'axios';\n\nconst BACKEND_URL = 'https://7.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nconst HttpCode = {\n  UNAUTHORIZED: 401,\n  DELETE: 204,\n};\n\nconst createAPI = (onUnauthorized) => {\n  const token = localStorage.getItem('token') ?? '';\n\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n    headers: {\n      'X-Token': token,\n    },\n  });\n\n  const onSuccess = (response) => {\n    const {data} = response;\n\n    if (data.token && !localStorage.getItem('token')) {\n      api.defaults.headers.common['X-token'] = data.token;\n\n      localStorage.setItem('token', data.token);\n    }\n\n    if (response.status === HttpCode.DELETE) {\n      api.defaults.headers.common['X-token'] = '';\n\n      localStorage.setItem('token', '');\n    }\n\n    return response;\n  };\n\n  const onFail = (err) => {\n    const {response} = err;\n\n    if (response.status === HttpCode.UNAUTHORIZED) {\n      onUnauthorized();\n    }\n\n    throw err;\n  };\n\n  api.interceptors.response.use(onSuccess, onFail);\n\n  return api;\n};\n\nexport {createAPI};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {HashRouter as BrowserRouter} from 'react-router-dom';\nimport browserHistory from './browser-history';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport App from './components/app/app';\n\nimport {createAPI} from './services/api';\nimport rootReducer from './store/root-reducer';\nimport {requireAuthorization} from './store/action';\nimport {checkAuth, fetchFilmsList} from './store/api-actions';\n\nimport {AppRoute, AuthorizationStatus} from './const.js';\nimport {redirect} from './store/middlewares/redirect';\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(thunk.withExtraArgument(\n    createAPI(\n      () => store.dispatch(requireAuthorization(AuthorizationStatus.NO_AUTH)),\n    ),\n  )),\n  applyMiddleware(redirect),\n));\n\nstore.dispatch(checkAuth());\nstore.dispatch(fetchFilmsList());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter history={browserHistory} >\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n\nwindow.onbeforeunload = (evt) => {\n  evt.preventDefault();\n\n  if (evt) {\n    browserHistory.push(AppRoute.MAIN);\n  }\n};\n","import browserHistory from '../../browser-history.js';\nimport {ActionType} from '../action.js';\n\nconst redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(`/1569955-what-to-watch-7/#${action.payload}`);\n    window.location.reload();\n  }\n\n  return next(action);\n};\n\nexport {redirect};\n"],"sourceRoot":""}